AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  GitHubOwner:
    Type: String
    Default: krishpy3
  GitHubRepo:
    Type: String
    Default: sample-react-app
  GitHubBranch:
    Type: String
    Default: main
  GitHubToken:
    Type: String
    Default: 'xxxxxxxxxxxxxxxxxxxxxxxxxx'
  DeployBucket:
    Type: String
    Default: krish-test-buc

Resources:
  ArtifactsBucket:
    Type: 'AWS::S3::Bucket'

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: 'React_CodePipeline_Role'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt ArtifactsBucket.Arn
                  - !Join ['', [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "iam:PassRole"
                Resource: '*' 

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt ArtifactsBucket.Arn
                  - !Join ['', [!GetAtt ArtifactsBucket.Arn, "/*"]]
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource: 
                  - !Sub "arn:aws:s3:::${DeployBucket}"
                  - !Sub "arn:aws:s3:::${DeployBucket}/*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "*"

  BuildCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL 
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}-CodeBuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install: 
              commands:
                - echo Installing npm packages      
                - npm install      
            build:
              commands:
                - echo Build started on `date`
                - npm run build
            post_build:
              commands:
                - aws s3 cp --recursive --acl public-read ./build s3://${DeployBucket}/
          artifacts:
            files:
              - '**/*'
            base-directory: build
 
  AppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                OAuthToken: !Ref GitHubToken
                Branch: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceRepo
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceRepo
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildCodeBuildProject
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1   

